From ec85b37192bfac468c97cc0892cc14f7cb507d16 Mon Sep 17 00:00:00 2001
From: Stephen Hemminger <sthemmin@microsoft.com>
Date: Fri, 3 Nov 2017 07:01:24 +0100
Subject: [PATCH 62/71] hv_netcsc: track memory allocation failures in ethtool
 stats

When skb can not be allocated, update ethtool statisitics
rather than rx_dropped which is intended for netif_receive.
---
 drivers/net/hyperv/hyperv_net.h |    1 +
 drivers/net/hyperv/netvsc_drv.c |    5 +++--
 2 files changed, 4 insertions(+), 2 deletions(-)

--- a/drivers/net/hyperv/hyperv_net.h	2017-11-17 10:41:15.794640825 -0800
+++ b/drivers/net/hyperv/hyperv_net.h	2017-11-17 10:41:15.786640927 -0800
@@ -690,6 +690,7 @@ struct netvsc_ethtool_stats {
 	unsigned long tx_busy;
 	unsigned long tx_send_full;
 	unsigned long rx_comp_busy;
+	unsigned long rx_no_memory;
 	unsigned long stop_queue;
 	unsigned long wake_queue;
 };
--- a/drivers/net/hyperv/netvsc_drv.c	2017-11-17 10:41:15.794640825 -0800
+++ b/drivers/net/hyperv/netvsc_drv.c	2017-11-17 10:41:15.790640877 -0800
@@ -774,8 +774,8 @@ int netvsc_recv_callback(struct net_devi
 	skb = netvsc_alloc_recv_skb(net, &nvchan->napi,
 				    csum_info, vlan, data, len);
 	if (unlikely(!skb)) {
+		++net_device_ctx->eth_stats.rx_no_memory;
 drop:
-		++net->stats.rx_dropped;
 		rcu_read_unlock();
 		return NVSP_STAT_FAIL;
 	}
@@ -1124,12 +1124,13 @@ static const struct {
 	u16 offset;
 } netvsc_stats[] = {
 	{ "tx_scattered", offsetof(struct netvsc_ethtool_stats, tx_scattered) },
-	{ "tx_no_memory",  offsetof(struct netvsc_ethtool_stats, tx_no_memory) },
+	{ "tx_no_memory", offsetof(struct netvsc_ethtool_stats, tx_no_memory) },
 	{ "tx_no_space",  offsetof(struct netvsc_ethtool_stats, tx_no_space) },
 	{ "tx_too_big",	  offsetof(struct netvsc_ethtool_stats, tx_too_big) },
 	{ "tx_busy",	  offsetof(struct netvsc_ethtool_stats, tx_busy) },
 	{ "tx_send_full", offsetof(struct netvsc_ethtool_stats, tx_send_full) },
 	{ "rx_comp_busy", offsetof(struct netvsc_ethtool_stats, rx_comp_busy) },
+	{ "rx_no_memory", offsetof(struct netvsc_ethtool_stats, rx_no_memory) },
 	{ "stop_queue", offsetof(struct netvsc_ethtool_stats, stop_queue) },
 	{ "wake_queue", offsetof(struct netvsc_ethtool_stats, wake_queue) },
 }, vf_stats[] = {
